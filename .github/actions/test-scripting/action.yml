name: Test Scripting
description: "runs all the tests for bash scripts"

# secrets:
#   DEFAULT_MAINNET_RPC_URL:
#     description: "default API URL for accessing blockchain service"
#     required: false
inputs:
  # os:
  #   description: "Operating system to test"
  #   required: true
  #   type: string
  foundry:
    description: "Foundry version to test"
    required: true

runs:
  using: "composite"
  steps:
    - name: Check Environment
      shell: bash
      run: |
        echo "runner.os=${{ runner.os }}"
        python3 -c "import platform; info = f'{platform.system()} {platform.release()} {platform.version()} {platform.machine()}'; print('-' * len(info)); print(info); print('-' * len(info))"

    - name: Install Bash 5.2 (on macOS)
      if: runner.os == 'macOS'
      shell: bash
      run: |
        brew install bash
        bash --version

    - name: Install ShellCheck
      shell: bash
      run: |
        if [[ "${{ runner.os }}" == "Linux" ]]; then
          sudo apt-get update
          sudo apt-get install -y shellcheck
        elif [[ "${{ runner.os }}" == "macOS" ]]; then
          brew install shellcheck
        elif [[ "${{ runner.os }}" == "Windows" ]]; then
          # Install Chocolatey if not already installed
          if ! command -v choco &>/dev/null; then
            echo "Installing Chocolatey..."
            powershell -Command "Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))"
          fi

          # Install ShellCheck via Chocolatey
          echo "Installing ShellCheck via Chocolatey..."
          powershell -Command "choco install shellcheck -y"

          # Add to PATH for this session
          echo "C:\Program Files\shellcheck" >> $GITHUB_PATH
        else
          echo "Unknown OS, skipping ShellCheck installation"
        fi

        # Verify installation
        if command -v shellcheck &>/dev/null; then
          shellcheck --version
        else
          echo "Warning: ShellCheck not available in PATH"
        fi

    # we install foundry because some scripts check for it's existence
    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1
      with:
        version: ${{ inputs.FOUNDRY }}
    - shell: bash
      run: |
        forge --version

    - name: Install project dependencies
      shell: bash
      run: |
        yarn

    - name: Run run script debug info
      shell: bash
      run: |
        DEBUG=run,nothing ./run nothing hello bash script
        DEBUG=run.sh ./run nothing-dir hello directory
        DEBUG=run-python ./run nothing-python hello assumed python script
        DEBUG=run-python ./run nothing-python.py hello .py python script
      id: nothing

    # - name: Run Python (pytest) Tests
    #   shell: bash
    #   run: |
    #     yarn test:python
    #   id: pytest

    # - name: Run Bash (BATS) Tests
    #   shell: bash
    #   run: |
    #     yarn test:bash
    #   id: bats

    # - name: Run Bash Script Linting
    #   shell: bash
    #   run: |
    #     yarn lint:bash
    #   id: lint

    - name: Check for changed repo files
      shell: bash
      run: |
        git status --short
        git diff --minimal --exit-code
      id: git-diffs