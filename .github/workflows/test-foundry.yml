name: Test Foundry (callable)

on:
  workflow_call:
    inputs:
      os:
        description: "Operating system to test"
        required: true
        type: string
      foundry:
        description: "Foundry version to test"
        required: true
        type: string

env:
  FOUNDRY_PROFILE: ci

jobs:
  test_foundry_project:
    name: Foundry project
    runs-on: ${{ inputs.OS }}
    steps:
      - name: Check Environment
        run: |
          echo "runner.os=${{ runner.os }}"
          python3 -c "import platform; info = f'{platform.system()} {platform.release()} {platform.version()} {platform.machine()}'; print('-' * len(info)); print(info); print('-' * len(info))"

      - name: Install recent python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
      - run: |
          python3 --version

      - name: Install Poetry (python package manager)
        uses: snok/install-poetry@v1

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: ${{ inputs.FOUNDRY }}
      - run: |
          forge --version

      - name: Install project dependencies
        run: |
          yarn

      - name: Run Prettier
        # TODO: doesn't run on windows
        if: ${{ runner.os != 'Windows' }}
        run: |
          yarn fmt:check
        id: fmt

      - name: Run Solhint
        # TODO: doesn't run on windows
        if: ${{ runner.os != 'Windows' }}
        run: |
          yarn lint
        id: lint

      - name: Run Slither
        # TODO: doesn't run on windows
        if: ${{ runner.os != 'Windows' }}
        run: |
          yarn slither
        id: slither

      - name: Run Forge build
        run: |
          yarn sizes
        id: build

      - name: Run Forge tests
        env:
          ALCHEMY_KEY: ${{ secrets.ALCHEMY_KEY }}
          ALCHEMY_RPC_URL: https://eth-mainnet.g.alchemy.com/v2/${{ secrets.ALCHEMY_KEY }}
          MAINNET_RPC_URL: ${{ env.MAINNET_RPC_URL || env.ALCHEMY_RPC_URL }}
        run: |
          echo "ALCHEMY_KEY length is ${#ALCHEMY_KEY}"
          echo mainnet URL: $ALCHEMY_KEY
          echo "ALCHEMY_RPC_URL length is ${#ALCHEMY_RPC_URL}"
          echo ALCHEMY URL: $ALCHEMY_RPC_URL
          echo "MAINNET_RPC_URL length is ${#MAINNET_RPC_URL}"
          echo mainnet URL: $MAINNET_RPC_URL
          yarn test
          yarn coverage
          yarn gas
        id: test

      - name: Check for changed repo files
        run: |
          yarn git-status
