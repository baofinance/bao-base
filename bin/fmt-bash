#!/usr/bin/env bash
set -euo pipefail

SHFMT_BIN="$HOME/.local/bin/shfmt"
if [[ ! -x "$SHFMT_BIN" ]]; then
  curl -sS https://webi.sh/shfmt | sh
fi
info 1 "shfmt version:" $("$SHFMT_BIN" --version)

# Create a new array starting with style options
args=("--indent=2" "--case-indent")

FILE_TYPES=".sh:.bash:.bats"
SHEBANGS="#!/bin/bash:#!/usr/bin/env bash:#!/bin/sh:#!/usr/bin/env sh:#!/usr/bin/env bats"

mode="--list"
for arg in "$@"; do
  case "$arg" in
  --write)
    mode="--write"
    ;;
  --check)
    mode="--list"
    ;;
  -*)
    # add the args to the list for formatting
    args+=("$arg")
    ;;
  *)
    # it's a directory or a file
    if [[ -f "$arg" ]]; then
      args+=("$arg")
    elif [[ -d "$arg" ]]; then
      # Use grep to directly find files with matching extensions or shebangs
      # This is MUCH faster than processing each file individually

      # Convert FILE_TYPES for grep pattern
      file_pattern=""
      IFS=':' read -ra types <<<"$FILE_TYPES"
      for t in "${types[@]}"; do
        file_pattern="${file_pattern:-}|${t}$"
      done
      file_pattern="${file_pattern:1}" # Remove leading |

      # Find files with matching extensions first (very fast)
      if [[ -n "$file_pattern" ]]; then
        while IFS= read -r file; do
          [[ -n "$file" ]] && args+=("$file")
        done < <(find "$arg" -type f -regextype posix-extended -regex ".*($file_pattern)" 2>/dev/null)
      fi

      # For shebang matches, use grep directly to search for shebangs
      # This is much faster than running head on every file
      while IFS= read -r shebang; do
        if [[ -n "$shebang" ]]; then
          while IFS= read -r file; do
            [[ -n "$file" ]] && args+=("$file")
          done < <(grep -l "^$shebang" --include="*" --exclude-dir={.git,node_modules} -r "$arg" 2>/dev/null)
        fi
      done < <(tr ':' '\n' <<<"$SHEBANGS")
    fi
    ;;
  esac
done

# Print to help debug what files were found
info 1 "Found ${#args[@]} files to format"

shopt -s globstar nullglob
info 2 "$SHFMT_BIN $mode ${args[@]}"

"$SHFMT_BIN" "$mode" "${args[@]}"
