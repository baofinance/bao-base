#!/bin/bash
set -e -o pipefail

if [[ -n "${GUARD_SOURCING_RECORDING:-}" ]]; then return; fi; GUARD_SOURCING_RECORDING=1
[[ -n "${LOADING:-}" ]] && echo "loading ${BASH_SOURCE[0]}..."

# shellcheck disable=SC1091
source "$(dirname "${BASH_SOURCE[0]}")/logging"

json_recording_directory='./deploy'
json_recording_timestamp=$(date '+%Y-%m-%d_%H:%M:%S')
json_recording_file=''
json_recording_latest_file=''

# setup the file to log to
recording_to() {
    logging trace "${FUNCNAME[0]}($*)..."
    local name="$1" # if you are recording to more than one file, one after the other you need to give a name
    local calling_script_name=$(basename "${BASH_SOURCE[1]}" | cut -d. -f1)

    mkdir -p "${json_recording_directory}"
    local base_file_name="${json_recording_directory}/${LOCAL:+$LOCAL-}${CHAIN_NAME}-${calling_script_name}${name:+-$name}"

    json_recording_file="${base_file_name}_${json_recording_timestamp}.log"
    json_recording_latest_file="${base_file_name}_latest.log"

    logging info "Recording to ${json_recording_file}"
}

# Add a numeric field to the JSON file
recording_field_numeric() {
    local key="$1"
    local value="$2"
    _add_json_to_file "{\"$key\": $value}"
}

# Add a string/address field to the JSON file
recording_field() {
    local key="$1"
    local value="$2"
    _add_json_to_file "{\"$key\": \"$value\"}"
}

###################################################################
# private functions

_add_json_to_file() {
    logging trace "${FUNCNAME[0]}($*)..."
    if [[ -z "$json_recording_file" ]]; then
        echo "Error: call recording_to [extra field] before logging"
    else
        # create the file if it doesn't exist
        if [[ ! -f "$json_recording_file" ]]; then
            echo "{}" > "$json_recording_file"
        fi
        local temp
        temp=$(mktemp)
        jq ". + $1" "$json_recording_file" > "$temp" && mv "$temp" "$json_recording_file"
        cp "$json_recording_file" "$json_recording_latest_file"
    fi
}
