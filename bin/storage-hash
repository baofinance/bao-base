#!/bin/bash
set -e
set -o pipefail

# calculates a storage has for a contract
# uses chisel (installed as part of the foundry ethereum dev environment)
# see https://book.getfoundry.sh/getting-started/installation

if [ -z "$1" ]; then
  echo "Usage: $0 <Contract name>"
  exit 1
fi

KEY=$1

case $KEY in
  (*.*) ;; # contains "."s, do nothing
  (*) KEY="bao.storage.$KEY";;
esac

echo using KEY="$KEY"
echo chisel eval "'"'keccak256(abi.encode(uint256(keccak256("'"$KEY"'")) - 1)) & ~bytes32(uint256(0xff))'"'"
# run the chisel command, extract the 3rd word on the second line, remove the colour sequences and pad to 64 hex characters
chisel eval 'keccak256(abi.encode(uint256(keccak256("'"$KEY"'")) - 1)) & ~bytes32(uint256(0xff))' | sed -n '2p' | awk '{ match($3,/0x([0-9a-fA-F]+)/,m); l=length(m[1]); hash="0x" (l<64? "0"*(64-l):"") m[1]; print hash}'