#!/bin/bash
set -e
set -o pipefail

# Set the path to the Poetry project and the target script
SCRIPT="$1"
shift

# Step 1: Install dependencies using Poetry
DEPENDENCIES_DIR="$BAO_BASE_LIB_DIR/$SCRIPT"
if [ ! -d "$DEPENDENCIES_DIR" ]; then
    DEPENDENCIES_DIR="$BAO_BASE_LIB_DIR"
fi

# Ensure Poetry is installed
if ! command -v poetry &> /dev/null; then
    echo "Poetry is not installed. Please install Poetry and try again."
    exit 1
fi

# set up the poetry config
export POETRY_VIRTUALENVS_OPTIONS_NO_PIP=true
export POETRY_NO_INTERACTION=1

# install the dependencies directing the output to stderr
# this output is nice to see, but not nice if we are running a filter.
# we do grep || true because we don't want a grep error code to fail the install
# we use a third file descriptor to preserve poetry's stderr
{
  poetry install --no-root --directory $DEPENDENCIES_DIR 2>&3 | grep -i " - Installing" >&2 || true
} 3>&2

# Step 2: Run the target Python script in the caller's directory
if [[ "$SCRIPT" == *.py ]]; then
    poetry run --directory $DEPENDENCIES_DIR python $DEPENDENCIES_DIR/$SCRIPT $@
else
    poetry run --directory $DEPENDENCIES_DIR $SCRIPT $@
fi
