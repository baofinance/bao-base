#!/bin/bash
set -e
set -o pipefail

export LOGGING_LEVEL=${LOGGING_LEVEL:-3} #Set default value of LOGGING_LEVEL to ERROR if not set
logging_config() {
    LOGGING_LEVEL=$(_logging_to_value "$1")
    # use file descriptor 8 (3-9 are available) for logging output, nothing else will use 8, hopefully
    # TODO: make this number configurable
    # as it is just sent to stdout, and we're only opening it once, there is no need to close it
    exec 8> >(stdbuf -o0 cat)
    logging $1 "logging level is now $1"
}

 logging() {
    local level_str=$(echo "$1" | tr '[:lower:]' '[:upper:]')
    local level=$(_logging_to_value "$1")
    shift
    local message="$*"
    if [[ "$level" -ge "$LOGGING_LEVEL" ]]; then
        echo "$(date '+%Y-%m-%d %H:%M:%S,%3N') - $(printf "%-6s" "$level_str:") $message" >&8
    fi
    if [[ "$level" -ge "4" ]]; then
        exit 1
    fi
}

_logging_to_value() {
    local level=0
    case $(echo "$1" | tr '[:upper:]' '[:lower:]') in
        debug ) level=0
                ;;
        info  ) level=1
                ;;
        warn  ) level=2
                ;;
        error ) level=3
                ;;
        fail  ) level=4
                ;;
    esac
    echo $level
}
